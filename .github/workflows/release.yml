name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: MonStim Analyzer ${{ github.ref }}
        body: |
          ## What's Changed
          
          <!-- Add release notes here or auto-generate from commits -->
          
          ## Installation
          
          1. Download the appropriate package for your operating system
          2. Extract the contents to a folder of your choice
          3. Run `MonStim Analyzer v${{ github.ref_name }}.exe` (Windows)
          
          ## System Requirements
          
          - **Windows:** Windows 10 or later (64-bit)
          - **Memory:** 4GB RAM minimum, 8GB recommended for large datasets
          - **Storage:** 2GB free space for application and data processing
          
          ## Documentation
          
          - [User Guide](https://github.com/AEWorthy/MonStim-Analyzer/blob/main/docs/readme.md)
          - [Quick Start Guide](https://github.com/AEWorthy/MonStim-Analyzer#quick-start-guide)
          - [Troubleshooting](https://github.com/AEWorthy/MonStim-Analyzer/blob/main/docs/readme.md#log-files)
          
          ## Support
          
          - [Report Issues](https://github.com/AEWorthy/MonStim-Analyzer/issues/new/choose)
          - [Ask Questions](https://github.com/AEWorthy/MonStim-Analyzer/discussions)
          - Email: aeworthy@emory.edu
        draft: false
        prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}

  build-windows:
    needs: create-release
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build Windows executable
      run: |
        pyinstaller win-main.spec --clean --noconfirm

    - name: Create distribution package
      run: |
        $version = "${{ github.ref }}" -replace "refs/tags/v", ""
        $packageName = "MonStim-Analyzer-$version-WIN"
        
        # Create package directory
        New-Item -ItemType Directory -Path "package\$packageName" -Force
        
        # Copy executable
        Copy-Item "dist\MonStim Analyzer $version.exe" "package\$packageName\"
        
        # Copy documentation
        Copy-Item "README.md" "package\$packageName\README.txt"
        Copy-Item "LICENSE" "package\$packageName\LICENSE.txt"
        Copy-Item "CONTRIBUTING.md" "package\$packageName\CONTRIBUTING.txt"
        Copy-Item "docs\readme.md" "package\$packageName\User_Guide.txt"
        
        # Copy sample data if it exists
        if (Test-Path "data") {
          Copy-Item "data" "package\$packageName\sample_data" -Recurse
        }
        
        # Create zip file
        Compress-Archive -Path "package\$packageName" -DestinationPath "$packageName.zip"

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./MonStim-Analyzer-${{ github.ref_name }}-WIN.zip
        asset_name: MonStim-Analyzer-${{ github.ref_name }}-WIN.zip
        asset_content_type: application/zip

  # Future: Add macOS and Linux builds when cross-platform support is ready
  # build-macos:
  #   needs: create-release
  #   runs-on: macos-latest
  #   steps:
  #     # Similar steps for macOS build
  
  # build-linux:
  #   needs: create-release
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Similar steps for Linux build

  update-documentation:
    needs: [create-release, build-windows]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Update version references
      run: |
        version="${{ github.ref_name }}"
        
        # Update README with new version
        sed -i "s/MonStim-Analyzer-v[0-9]\+\.[0-9]\+\.[0-9]\+-WIN\.zip/MonStim-Analyzer-$version-WIN.zip/g" docs/readme.md
        sed -i "s/MonStim Analyzer v[0-9]\+\.[0-9]\+\.[0-9]\+\.exe/MonStim Analyzer $version.exe/g" docs/readme.md
        
        # Commit changes
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs/readme.md
        git diff --staged --quiet || git commit -m "Update documentation for release $version"
        git push
